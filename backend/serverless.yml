service: slbugs

custom:
  stage: '${opt:stage, self:provider.stage}'
  developmentCognitoPool: 'DEV_POOL_ID'
  stagingCognitoPool:  'STAGING_POOL_ID'
  productionCognitoPool:  'PRODUCTION_POOL_ID'
  webpackIncludeModules: true
  serverless-offline:
    port: 4000
  # In Progress
  # s3:
  #   port: 8000
  #   directory: /tmp
  #   cors: true
  dynamodb:
    start:
      port: 8888
      migrate: true
      seed: true
    seed:
      test:
        sources:
          - table: slbugs-users
            sources: [seed_data/users.json]
provider:
  name: aws
  runtime: nodejs6.10
  region: us-east-1
  environment:
    NODE_ENV: '${env:NODE_ENV}'
    UsersTable:
      Ref: UsersDB
    ItemsTable:
      Ref: ItemsDB
    ProjectsTable:
      Ref: ProjectsDB
  iamRoleStatements:
    - Effect: Allow
      Resource:
        - 'Fn::Join':
            - ''
            - - 'arn:aws:dynamodb:'
              - Ref: 'AWS::Region'
              - ':'
              - Ref: 'AWS::AccountId'
              - ':table/'
              - Ref: UsersDB
        - 'Fn::Join':
            - ''
            - - 'arn:aws:dynamodb:'
              - Ref: 'AWS::Region'
              - ':'
              - Ref: 'AWS::AccountId'
              - ':table/'
              - Ref: UsersDB
              - /index/*
        - 'Fn::Join':
            - ''
            - - 'arn:aws:dynamodb:'
              - Ref: 'AWS::Region'
              - ':'
              - Ref: 'AWS::AccountId'
              - ':table/'
              - Ref: ProjectsDB
        - 'Fn::Join':
            - ''
            - - 'arn:aws:dynamodb:'
              - Ref: 'AWS::Region'
              - ':'
              - Ref: 'AWS::AccountId'
              - ':table/'
              - Ref: ItemsDB
        - 'Fn::Join':
            - ''
            - - 'arn:aws:dynamodb:'
              - Ref: 'AWS::Region'
              - ':'
              - Ref: 'AWS::AccountId'
              - ':table/'
              - Ref: ItemsDB
              - /index/*
      Action:
        - 'dynamodb:GetItem'
        - 'dynamodb:PutItem'
        - 'dynamodb:UpdateItem'
        - 'dynamodb:DeleteItem'
        - 'dynamodb:Scan'
        - 'dynamodb:Query'
plugins:
  - serverless-offline
  - serverless-dynamodb-local
  - serverless-webpack
  # - serverless-s3-local

functions:
  graphql:
    handler: handler.graphqlHandler
    events:
    - http:
        cors: true
        authorizer:
            arn: ${self:custom.${self:custom.stage}CognitoPool}
        path: graphql
        method: post

  graphiql:
    handler: handler.graphiqlHandler
    events:
    - http:
        path: graphiql
        method: get
        cors: true

  postConfirmUser:
    handler: resolvers/util/postConfirmation.handler

resources:
  Resources:
    UsersDB: '${file(resources/UsersDB.yml)}'
    ProjectsDB: '${file(resources/ProjectsDB.yml)}'
    ItemsDB: '${file(resources/ItemsDB.yml)}'
